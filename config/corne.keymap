/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        kht: kht {
            compatible = "zmk,behavior-hold-tap";
            label = "Key hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <4 5>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
        };

        combo_win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <6 7>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
        };

        combo_bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
        };

        combo_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 19>;
            timeout-ms = <200>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };
    };

    macros {
        par_macro: par_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR_MACRO";
        };

        bra_macro: bra_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRA_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none  &kht QUESTION Q  &kht AT_SIGN W    &kht RA(E) E   &kp R              &kp T        &kp Y         &kht RA(U) U       &kht RA(I) I          &kht RA(O) O          &kp P                 &none
&none  &kht RA(A) A     &kht RIGHT_ALT S  &kht LCTRL D   &kht LEFT_SHIFT F  &lt 3 G      &kht MINUS H  &kht LEFT_SHIFT J  &kht LCTRL K          &kht RIGHT_ALT L      &kht PLUS SEMICOLON   &none
&none  &kp Z            &kht LC(X) X      &kht LC(C) C   &kht LC(V) V       &kp B        &kht RA(N) N  &kht SQT M         &kht HASH COMMA       &kht EXCLAMATION DOT  &kht RA(SLASH) SLASH  &none
                                          &kp BACKSPACE  &mo 1              &kp SPACE    &kp RET       &mo 2              &kht PRINTSCREEN TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Num+BT";
            bindings = <
&none  &bt BT_CLR  &trans  &trans  &trans  &bt BT_SEL 0    &kp PERIOD    &kp N7        &kp N8        &kp N9        &trans     &none
&none  &trans      &trans  &trans  &trans  &bt BT_SEL 2    &kp SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&none  &trans      &trans  &trans  &trans  &bt BT_SEL 3    &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &trans
                           &trans  &trans  &trans          &trans        &trans        &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Media+Sym";
            bindings = <
&none  &trans  &trans     &kp PIPE          &kp LEFT_BRACE    &kp RBRC             &trans  &trans             &trans            &trans           &trans  &none
&none  &trans  &kp TILDE  &kp MINUS         &kp LPAR          &kp RPAR             &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans  &none
&none  &trans  &trans     &kp GREATER_THAN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans  &none
                          &trans            &trans            &trans               &trans  &trans             &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &par_macro  &kp UP_ARROW  &bra_macro  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT    &kp DOWN      &kp RIGHT   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME    &trans        &kp END     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans      &trans
            >;

            label = "NAV";
        };
    };
};
