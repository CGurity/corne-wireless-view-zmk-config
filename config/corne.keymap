/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        kht: kht {
            compatible = "zmk,behavior-hold-tap";
            label = "Key hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
            timeout-ms = <50>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <16 19>;
            timeout-ms = <50>;
            require-prior-idle-ms = <0>;
        };

        combo_win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <38 39>;
            timeout-ms = <50>;
        };

        combo_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <17 18>;
            timeout-ms = <50>;
            layers = <0>;
        };

        Screenshot {
            bindings = <&kp PSCRN>;
            key-positions = <25 10>;
        };

        alt {
            bindings = <&sk RIGHT_ALT>;
            key-positions = <37 40>;
        };
    };

    macros {
        par_macro: par_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR_MACRO";
        };

        bra_macro: bra_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRA_MACRO";
        };

        cur_macro: cur_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "CUR_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none  &kht EXCLAMATION Q  &kht AT_SIGN W   &kht RA(E) E  &kp R              &kp T             &kp Y          &kht RA(U) U       &kht RA(I) I     &kht RA(O) O        &kp P                &none
&none  &kht RA(A) A        &kht LEFT_ALT S  &kht LCTRL D  &kht LEFT_SHIFT F  &lt 3 G           &kht MINUS H   &kht LEFT_SHIFT J  &kht LCTRL K     &kht LEFT_ALT L     &kht PLUS SEMICOLON  &none
&none  &kp Z               &kht LC(X) X     &kht LC(C) C  &kht LC(V) V       &kht LC(B) B      &kht RA(N) N   &kht SQT M         &kht HASH COMMA  &kht RA(SLASH) DOT  &kht QUESTION SLASH  &none
                                            &to 1         &kp SPACE          &kp LEFT_SHIFT    &kp BACKSPACE  &kp RET            &lt 2 TAB
            >;
        };

        num_nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Num+Nav";
            bindings = <
&none  &to 5   &kp HOME  &kp UP_ARROW    &kp END    &kp PG_UP    &kp PERIOD    &kp N7                    &kp N8         &kp N9                  &kp KP_EQUAL  &none
&none  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp PG_DN    &kp SLASH     &kht LEFT_SHIFT NUMBER_4  &kht LCTRL N5  &kht LEFT_ALT NUMBER_6  &kp MINUS     &trans
&none  &trans  &trans    &trans          &trans     &trans       &kp ASTERISK  &kp NUMBER_1              &kp NUMBER_2   &kp NUMBER_3            &kp PLUS      &trans
                         &to 0           &trans     &trans       &trans        &trans                    &kp N0
            >;
        };

        sym_media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Sym+Media";
            bindings = <
&none  &trans  &kp BACKSLASH  &kp PIPE          &kp LEFT_BRACE    &kp RBRC             &trans  &to 0              &trans            &to 4            &trans  &none
&none  &trans  &kp TILDE      &kp MINUS         &kp LPAR          &kp RPAR             &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans  &none
&none  &trans  &kp AMPERSAND  &kp GREATER_THAN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans  &none
                              &trans            &trans            &trans               &trans  &trans             &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &par_macro  &kp UP_ARROW  &bra_macro  &cur_macro  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans          &trans  &kp LEFT    &kp DOWN      &kp RIGHT   &trans      &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &kp HOME    &trans        &kp END     &kp F2      &trans
                                    &trans        &trans        &trans          &trans  &trans      &trans
            >;

            label = "Nav";
        };

        gaming {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T      &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp TAB    &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans     &trans  &trans  &to 0
            >;

            label = "Gaming";
        };

        fn {
            label = "Fn";
            bindings = <
&none  &to 1   &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                       &to 0   &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
